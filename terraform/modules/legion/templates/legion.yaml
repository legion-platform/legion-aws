legionVersion: "${legion_version}"
imagesRegistry: "${docker_repo}/"
logLevel: debug

ingress:
  enabled: true
  globalDomain: "${cluster_name}.${root_domain}"
  tlsEnabled: true
  tlsSecretName: "${cluster_name}-tls"

security:
  enabled: true

feedback:
  enabled: true
  output:
%{ if cloud_type == "aws" ~}
    target: "s3"
    s3:
      bucket: "${legion_data_bucket}"
      region: "${legion_data_bucket_region}"
      customIAMRole: "${legion_collector_iam_role}"
%{ endif ~}
%{ if cloud_type == "gcp" ~}
    target: "gcs"
    gcs:
      bucket: "${legion_data_bucket}"
      customSA: "${legion_collector_sa}"
%{ endif ~}
%{ if cloud_type == "azure" ~}
    target: "azureblob"
    azureblob:
      authorization: "accesskey"
      bucket: "${legion_data_bucket}"
      AzureStorageAccount: "${azure_storage_account}"
      AzureStorageAccessKey: "${azure_storage_access_key}"
%{ endif ~}

edi:
  replicas: 2

metrics:
  enabled: true
  dashboardFolder: /tmp/dashboards/legion

connections:
  - id: legion-examples
    spec:
      type: "git"
      uri: "${git_examples_uri}"
      reference: "${git_examples_reference}"
      keySecret: "${git_examples_key}"
      description: "${git_examples_description}"
      webUILink: "${git_examples_web_ui_link}"

  - id: docker-ci
    spec:
      type: docker
      uri: "${model_docker_repo}"
      password: |
        ${model_docker_password}
      username: "${model_docker_user}"
      description: "${model_docker_description}"
      webUILink: "${model_docker_web_ui_link}"

  - id: models-output
    spec:
%{ if cloud_type == "gcp" ~}
      type: gcs
      region: "${model_output_region}"
%{ endif ~}
%{ if cloud_type == "aws" ~}
      type: s3
      region: "${model_output_region}"
%{ endif ~}
%{ if cloud_type == "azure" ~}
      type: azureblob
%{ endif ~}
      uri: "${model_output_bucket}"
      keySecret: |
        ${model_output_secret}
      description: "${model_output_description}"
      webUILink: "${model_output_web_ui_link}"

modelExecution:
  limits:
    cpu: "${model_resources_cpu}"
    mem: "${model_resources_mem}"

config:
  common:
    external_urls:
      - name: "API Gateway"
        url: "https://edi.${cluster_name}.${root_domain}/swagger/index.html"
      - name: "ML Metrics"
        url: "https://mlflow.${cluster_name}.${root_domain}"
      - name: "Service Catalog"
        url: "https://edge.${cluster_name}.${root_domain}/swagger/index.html"
      - name: "Cluster Monitoring"
        url: "https://grafana.${cluster_name}.${root_domain}"
      - name: "Feedback storage"
        url: "${feedback_storage_link}"
  deployment:
    toleration: {}
    node_selector: {}
    edge:
      host: https://edge.${cluster_name}.${root_domain}
    namespace: "${legion_deployment_namespace}"
    server:
      template_folder: /opt/legion/templates
    security:
      jwks:
        enabled: ${model_authorization_enabled}
        url: "${model_oidc_jwks_url}"
        issuer: "${model_oidc_issuer}"

  training:
    toleration: {}
    node_selector: {}
    namespace: "${legion_training_namespace}"
    output_connection: models-output
    metric_url: "https://mlflow.${cluster_name}.${root_domain}"
    model_trainer:
      image: "${docker_repo}/k8s-model-trainer:${legion_version}"

  packaging:
    toleration: {}
    node_selector: {}
    namespace: "${legion_packaging_namespace}"
    output_connection: models-output
    service_account: legion-model-packager
    model_packager:
      image: "${docker_repo}/k8s-model-packager:${legion_version}"
