ingress:
  enabled: "true"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.${cluster_name}.${root_domain}/oauth2/start?rd=https://$host$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.kube-system.svc.cluster.local:4180/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/configuration-snippet: |-
        set_escape_uri $escaped_request_uri $request_uri;
        auth_request_set $user   $upstream_http_x_auth_request_user;
        auth_request_set $email  $upstream_http_x_auth_request_email;
        auth_request_set $jwt    $upstream_http_x_auth_request_access_token;
        auth_request_set $_oauth2_proxy_1 $upstream_cookie__oauth2_proxy_1;
 
        proxy_set_header X-User            $user;
        proxy_set_header X-Email           $email;
        proxy_set_header X-JWT             $jwt;
        proxy_set_header Authorization     "Bearer $jwt";

        access_by_lua_block {
            if ngx.var._oauth2_proxy_1 ~= "" then
                ngx.header["Set-Cookie"] = "_oauth2_proxy_1=" .. ngx.var._oauth2_proxy_1 .. ngx.var.auth_cookie:match("(; .*)")
            end
        }
  hosts:
    - "dashboard.${cluster_name}.${root_domain}"
  tls:
    - secretName: "${dashboard_tls_secret_name}"
      hosts:
        - "dashboard.${cluster_name}.${root_domain}"