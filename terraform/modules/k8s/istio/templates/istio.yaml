global:
  controlPlaneSecurityEnabled: false
  mtls:
    enabled: false
  proxy:
    accessLogFile: "/dev/stdout"
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 50m
        memory: 50Mi

  disablePolicyChecks: false

  sidecarInjectorWebhook:
    enabled: true
    rewriteAppHTTPProbe: false

pilot:
  traceSampling: 100.0
  resources:
    requests:
      cpu: 500m
      memory: 200Mi
    limits:
      cpu: 500m
      memory: 200Mi

mixer:
  policy:
    enabled: true
    resources:
      requests:
        cpu: 500m
        memory: 200Mi
      limits:
        cpu: 500m
        memory: 200Mi

  telemetry:
    enabled: true
    resources:
      requests:
        cpu: 500m
        memory: 200Mi
      limits:
        cpu: 500m
        memory: 200Mi

  adapters:
    stdio:
      enabled: true

grafana:
  enabled: false
prometheus:
  enabled: false

tracing:
  enabled: true
  contextPath: /
  ingress:
    enabled: true
    annotations:
      "nginx.ingress.kubernetes.io/auth-signin": "https://auth.${cluster_name}.${root_domain}/oauth2/start?rd=https://$host$escaped_request_uri"
      "nginx.ingress.kubernetes.io/auth-url": "http://oauth2-proxy.kube-system.svc.cluster.local:4180/oauth2/auth"
      "nginx.ingress.kubernetes.io/configuration-snippet": |-
          set_escape_uri $escaped_request_uri $request_uri;
          auth_request_set $user   $upstream_http_x_auth_request_user;
          auth_request_set $email  $upstream_http_x_auth_request_email;
          auth_request_set $jwt    $upstream_http_x_auth_request_access_token;

          proxy_set_header X-User            $user;
          proxy_set_header X-Email           $email;
          proxy_set_header X-JWT             $jwt;
          proxy_set_header Authorization     "Bearer $jwt";
    hosts:
      - tracing.${cluster_name}.${root_domain}
    tls:
      - hosts:
          - "tracing.${cluster_name}.${root_domain}"
        secretName: "${cluster_name}-tls"

servicegraph:
  enabled: true
  prometheusAddr: http://prometheus-prometheus.${monitoring_namespace}:9090
  ingress:
    enabled: true
    annotations:
      "nginx.ingress.kubernetes.io/auth-signin": "https://auth.${cluster_name}.${root_domain}/oauth2/start?rd=https://$host$escaped_request_uri"
      "nginx.ingress.kubernetes.io/auth-url": "http://oauth2-proxy.kube-system.svc.cluster.local:4180/oauth2/auth"
      "nginx.ingress.kubernetes.io/configuration-snippet": |-
          set_escape_uri $escaped_request_uri $request_uri;
          auth_request_set $user   $upstream_http_x_auth_request_user;
          auth_request_set $email  $upstream_http_x_auth_request_email;
          auth_request_set $jwt    $upstream_http_x_auth_request_access_token;

          proxy_set_header X-User            $user;
          proxy_set_header X-Email           $email;
          proxy_set_header X-JWT             $jwt;
          proxy_set_header Authorization     "Bearer $jwt";
    hosts:
      - servicegraph.${cluster_name}.${root_domain}
    tls:
      - hosts:
          - "servicegraph.${cluster_name}.${root_domain}"
        secretName: "${cluster_name}-tls"

kiali:
  enabled: true
  contextPath: /
  createDemoSecret: true
  prometheusAddr: http://prometheus-prometheus.${monitoring_namespace}:9090
  dashboard:
    secretName: kiali
    grafanaURL: https://grafana.${cluster_name}.${root_domain}
    jaegerURL: https://jaerger.${cluster_name}.${root_domain}
  ingress:
    enabled: true
    annotations:
      "nginx.ingress.kubernetes.io/auth-signin": "https://auth.${cluster_name}.${root_domain}/oauth2/start?rd=https://$host$escaped_request_uri"
      "nginx.ingress.kubernetes.io/auth-url": "http://oauth2-proxy.kube-system.svc.cluster.local:4180/oauth2/auth"
      "nginx.ingress.kubernetes.io/configuration-snippet": |-
          set_escape_uri $escaped_request_uri $request_uri;
          auth_request_set $user   $upstream_http_x_auth_request_user;
          auth_request_set $email  $upstream_http_x_auth_request_email;
          auth_request_set $jwt    $upstream_http_x_auth_request_access_token;

          proxy_set_header X-User            $user;
          proxy_set_header X-Email           $email;
          proxy_set_header X-JWT             $jwt;
          proxy_set_header Authorization     "Bearer $jwt";
    hosts:
      - kiali.${cluster_name}.${root_domain}
    tls:
      - hosts:
          - "kiali.${cluster_name}.${root_domain}"
        secretName: "${cluster_name}-tls"

gateways:
  istio-ingressgateway:
    meshExpansionPorts: []
    ports:
      - port: 80
        targetPort: 80
        name: http
      - port: 443
        name: https
      - port: 15000
        name: administration
    type: ClusterIP
    resources:
      requests:
        cpu: 258m
        memory: 128Mi
      limits:
        cpu: 512m
        memory: 256Mi

  istio-egressgateway:
    enabled: true
    resources:
      requests:
        cpu: 10m
        memory: 40Mi
      limits:
        cpu: 100m
        memory: 128Mi
